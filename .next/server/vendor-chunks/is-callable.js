"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/is-callable";
exports.ids = ["vendor-chunks/is-callable"];
exports.modules = {

/***/ "(ssr)/./node_modules/is-callable/index.js":
/*!*******************************************!*\
  !*** ./node_modules/is-callable/index.js ***!
  \*******************************************/
/***/ ((module) => {

eval("\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === \"object\" && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === \"function\" && typeof Object.defineProperty === \"function\") {\n    try {\n        badArrayLike = Object.defineProperty({}, \"length\", {\n            get: function() {\n                throw isCallableMarker;\n            }\n        });\n        isCallableMarker = {};\n        // eslint-disable-next-line no-throw-literal\n        reflectApply(function() {\n            throw 42;\n        }, null, badArrayLike);\n    } catch (_) {\n        if (_ !== isCallableMarker) {\n            reflectApply = null;\n        }\n    }\n} else {\n    reflectApply = null;\n}\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n    try {\n        var fnStr = fnToStr.call(value);\n        return constructorRegex.test(fnStr);\n    } catch (e) {\n        return false; // not a function\n    }\n};\nvar tryFunctionObject = function tryFunctionToStr(value) {\n    try {\n        if (isES6ClassFn(value)) {\n            return false;\n        }\n        fnToStr.call(value);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = \"[object Object]\";\nvar fnClass = \"[object Function]\";\nvar genClass = \"[object GeneratorFunction]\";\nvar ddaClass = \"[object HTMLAllCollection]\"; // IE 11\nvar ddaClass2 = \"[object HTML document.all class]\";\nvar ddaClass3 = \"[object HTMLCollection]\"; // IE 9-10\nvar hasToStringTag = typeof Symbol === \"function\" && !!Symbol.toStringTag; // better: use `has-tostringtag`\nvar isIE68 = !(0 in [\n    , \n]); // eslint-disable-line no-sparse-arrays, comma-spacing\nvar isDDA = function isDocumentDotAll() {\n    return false;\n};\nif (typeof document === \"object\") {\n    // Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n    var all = document.all;\n    if (toStr.call(all) === toStr.call(document.all)) {\n        isDDA = function isDocumentDotAll(value) {\n            /* globals document: false */ // in IE 6-8, typeof document.all is \"object\" and it's truthy\n            if ((isIE68 || !value) && (typeof value === \"undefined\" || typeof value === \"object\")) {\n                try {\n                    var str = toStr.call(value);\n                    return (str === ddaClass || str === ddaClass2 || str === ddaClass3 // opera 12.16\n                     || str === objectClass // IE 6-8\n                    ) && value(\"\") == null; // eslint-disable-line eqeqeq\n                } catch (e) {}\n            }\n            return false;\n        };\n    }\n}\nmodule.exports = reflectApply ? function isCallable(value) {\n    if (isDDA(value)) {\n        return true;\n    }\n    if (!value) {\n        return false;\n    }\n    if (typeof value !== \"function\" && typeof value !== \"object\") {\n        return false;\n    }\n    try {\n        reflectApply(value, null, badArrayLike);\n    } catch (e) {\n        if (e !== isCallableMarker) {\n            return false;\n        }\n    }\n    return !isES6ClassFn(value) && tryFunctionObject(value);\n} : function isCallable(value) {\n    if (isDDA(value)) {\n        return true;\n    }\n    if (!value) {\n        return false;\n    }\n    if (typeof value !== \"function\" && typeof value !== \"object\") {\n        return false;\n    }\n    if (hasToStringTag) {\n        return tryFunctionObject(value);\n    }\n    if (isES6ClassFn(value)) {\n        return false;\n    }\n    var strClass = toStr.call(value);\n    if (strClass !== fnClass && strClass !== genClass && !/^\\[object HTML/.test(strClass)) {\n        return false;\n    }\n    return tryFunctionObject(value);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/is-callable/index.js\n");

/***/ })

};
;